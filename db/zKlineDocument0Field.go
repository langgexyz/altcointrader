
package db

// ---- auto generated by builder.go, NOT modify this file ----

import (
  field "github.com/xpwu/go-db-mongo/mongodb/field"
)

type KlineDocument0FieldUpdaterF struct {
  *baseKlineDocument0Field
  *field.StructUpdaterF
}

func (s *KlineDocument0FieldUpdaterF) FullName() string {
  return s.name
}

type KlineDocument0FieldFilterF struct {
  *baseKlineDocument0Field
  *field.StructFilterF
}

func (s *KlineDocument0FieldFilterF) FullName() string {
  return s.name
}

type KlineDocument0Field struct {
  *baseKlineDocument0Field
  KlineDocument0FieldUpdaterF  *KlineDocument0FieldUpdaterF
  KlineDocument0FieldFilterF   *KlineDocument0FieldFilterF
}

func NewKlineDocument0Field(fName string) *KlineDocument0Field {
  base := &baseKlineDocument0Field{fName}
  // 没有name时，不能做updater与filter操作，比如最顶层的Struct
  if fName == "" {
    return &KlineDocument0Field {baseKlineDocument0Field:base}
  }
  up := &KlineDocument0FieldUpdaterF{base, field.NewStructUpdaterF(fName)}
  fl := &KlineDocument0FieldFilterF{base, field.NewStructFilterF(fName)}

  return &KlineDocument0Field {base, up, fl}
}

// 对应于 bson struct 中的 inline 修饰符
func NewKlineDocument0FieldInline(fName string) *KlineDocument0Field {
  return &KlineDocument0Field {baseKlineDocument0Field: &baseKlineDocument0Field{fName}}
}

func (s *KlineDocument0Field) FullName() string {
  return s.name
}

type baseKlineDocument0Field struct {
  name      string
}

func (s *baseKlineDocument0Field) ID() *field.String0F {
  n := field.StructNext(s.name, "_id")
  return field.NewString0F(n)
}

func (s *baseKlineDocument0Field) Interval() *field.String0F {
  n := field.StructNext(s.name, "Interval")
  return field.NewString0F(n)
}

func (s *baseKlineDocument0Field) OpenTime() *field.Int640F {
  n := field.StructNext(s.name, "OpenTime")
  return field.NewInt640F(n)
}

func (s *baseKlineDocument0Field) Open() *field.Float640F {
  n := field.StructNext(s.name, "Open")
  return field.NewFloat640F(n)
}

func (s *baseKlineDocument0Field) High() *field.Float640F {
  n := field.StructNext(s.name, "High")
  return field.NewFloat640F(n)
}

func (s *baseKlineDocument0Field) Low() *field.Float640F {
  n := field.StructNext(s.name, "Low")
  return field.NewFloat640F(n)
}

func (s *baseKlineDocument0Field) Close() *field.Float640F {
  n := field.StructNext(s.name, "Close")
  return field.NewFloat640F(n)
}

func (s *baseKlineDocument0Field) Volume() *field.Float640F {
  n := field.StructNext(s.name, "Volume")
  return field.NewFloat640F(n)
}

func (s *baseKlineDocument0Field) CloseTime() *field.Int640F {
  n := field.StructNext(s.name, "CloseTime")
  return field.NewInt640F(n)
}

func (s *baseKlineDocument0Field) QuoteAssetVolume() *field.Float640F {
  n := field.StructNext(s.name, "QuoteAssetVolume")
  return field.NewFloat640F(n)
}

func (s *baseKlineDocument0Field) TradeCount() *field.Int0F {
  n := field.StructNext(s.name, "TradeCount")
  return field.NewInt0F(n)
}

func (s *baseKlineDocument0Field) TakerBuyBaseVolume() *field.Float640F {
  n := field.StructNext(s.name, "TakerBuyBaseVolume")
  return field.NewFloat640F(n)
}

func (s *baseKlineDocument0Field) TakerBuyQuoteVolume() *field.Float640F {
  n := field.StructNext(s.name, "TakerBuyQuoteVolume")
  return field.NewFloat640F(n)
}

func (s *baseKlineDocument0Field) IsOldest() *field.Bool0F {
  n := field.StructNext(s.name, "IsOldest")
  return field.NewBool0F(n)
}

